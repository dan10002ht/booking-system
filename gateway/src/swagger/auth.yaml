paths:
  /auth/register:
    post:
      summary: Register a new user
      description: Create a new user account
      tags: [Authentication]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
                - firstName
                - lastName
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  minLength: 8
                firstName:
                  type: string
                lastName:
                  type: string
      responses:
        201:
          description: User registered successfully
        400:
          description: Validation error
        409:
          description: User already exists

  /auth/login:
    post:
      summary: User login
      description: Authenticate user and return JWT tokens
      tags: [Authentication]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
      responses:
        200:
          description: Login successful
        401:
          description: Invalid credentials
        400:
          description: Validation error

  /auth/refresh:
    post:
      summary: Refresh access token
      description: Get new access token using refresh token
      tags: [Authentication]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - refreshToken
              properties:
                refreshToken:
                  type: string
      responses:
        200:
          description: Token refreshed successfully
        401:
          description: Invalid refresh token

  /auth/logout:
    post:
      summary: User logout
      description: Invalidate refresh token
      tags: [Authentication]
      security:
        - bearerAuth: []
      responses:
        200:
          description: Logout successful
        401:
          description: Unauthorized 